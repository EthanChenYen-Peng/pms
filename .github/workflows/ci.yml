name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-18.04
    services:
      # Label used to access the service contaienr.
      db:
        image: postgres:13.1
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # Maps tcp port 5432 on service container to the host.
        ports: ['5432:5432']
    steps:
      - uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.64.1
        with:
          ruby-version: 2.7.2

        # Enables to run yarn install
      - uses: Borales/actions-yarn@v2.3.0
        with:
          cmd: install

      - name: Install Dependencies
        run: |
          sudo apt install -yqq libpq-dev
          gem install bundler

      - name: Cache Ruby gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Setup test database and run tests
        env:
          POSTGRES_DATABASE: pms_test
          POSTGRES_HOST: localhost
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          RAILS_ENV: test
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate
          bundle exec rspec 
